error: useless conversion to the same type: `T`
  --> $DIR/useless_conversion.rs:7:13
   |
LL |     let _ = T::from(val);
   |             ^^^^^^^^^^^^ help: consider removing `T::from()`: `val`
   |
note: the lint level is defined here
  --> $DIR/useless_conversion.rs:3:9
   |
LL | #![deny(clippy::useless_conversion)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: useless conversion to the same type: `T`
  --> $DIR/useless_conversion.rs:8:5
   |
LL |     val.into()
   |     ^^^^^^^^^^ help: consider removing `.into()`: `val`

error: useless conversion to the same type: `i32`
  --> $DIR/useless_conversion.rs:20:22
   |
LL |         let _: i32 = 0i32.into();
   |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`

error: useless conversion to the same type: `std::str::Lines<'_>`
  --> $DIR/useless_conversion.rs:50:22
   |
LL |     if Some("ok") == lines.into_iter().next() {}
   |                      ^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `lines`

error: useless conversion to the same type: `std::str::Lines<'_>`
  --> $DIR/useless_conversion.rs:55:21
   |
LL |     let mut lines = text.lines().into_iter();
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `text.lines()`

error: useless conversion to the same type: `std::str::Lines<'_>`
  --> $DIR/useless_conversion.rs:61:22
   |
LL |     if Some("ok") == text.lines().into_iter().next() {}
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `text.lines()`

error: useless conversion to the same type: `std::ops::Range<i32>`
  --> $DIR/useless_conversion.rs:67:13
   |
LL |     let _ = NUMBERS.into_iter().next();
   |             ^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `NUMBERS`

error: useless conversion to the same type: `std::ops::Range<i32>`
  --> $DIR/useless_conversion.rs:72:17
   |
LL |     let mut n = NUMBERS.into_iter();
   |                 ^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `NUMBERS`

error: useless conversion to the same type: `std::string::String`
  --> $DIR/useless_conversion.rs:134:21
   |
LL |     let _: String = "foo".to_string().into();
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `"foo".to_string()`

error: useless conversion to the same type: `std::string::String`
  --> $DIR/useless_conversion.rs:135:21
   |
LL |     let _: String = From::from("foo".to_string());
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `"foo".to_string()`

error: useless conversion to the same type: `std::string::String`
  --> $DIR/useless_conversion.rs:136:13
   |
LL |     let _ = String::from("foo".to_string());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `"foo".to_string()`

error: useless conversion to the same type: `std::string::String`
  --> $DIR/useless_conversion.rs:137:13
   |
LL |     let _ = String::from(format!("A: {:04}", 123));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `format!("A: {:04}", 123)`

error: useless conversion to the same type: `std::str::Lines<'_>`
  --> $DIR/useless_conversion.rs:138:13
   |
LL |     let _ = "".lines().into_iter();
   |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `"".lines()`

error: useless conversion to the same type: `std::vec::IntoIter<i32>`
  --> $DIR/useless_conversion.rs:139:13
   |
LL |     let _ = vec![1, 2, 3].into_iter().into_iter();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`

error: useless conversion to the same type: `std::string::String`
  --> $DIR/useless_conversion.rs:140:21
   |
LL |     let _: String = format!("Hello {}", "world").into();
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!("Hello {}", "world")`

error: useless conversion to the same type: `i32`
  --> $DIR/useless_conversion.rs:145:13
   |
LL |     let _ = i32::from(a + b) * 3;
   |             ^^^^^^^^^^^^^^^^ help: consider removing `i32::from()`: `(a + b)`

error: useless conversion to the same type: `Foo<'a'>`
  --> $DIR/useless_conversion.rs:151:23
   |
LL |     let _: Foo<'a'> = s2.into();
   |                       ^^^^^^^^^ help: consider removing `.into()`: `s2`

error: useless conversion to the same type: `Foo<'a'>`
  --> $DIR/useless_conversion.rs:153:13
   |
LL |     let _ = Foo::<'a'>::from(s3);
   |             ^^^^^^^^^^^^^^^^^^^^ help: consider removing `Foo::<'a'>::from()`: `s3`

error: useless conversion to the same type: `std::vec::IntoIter<Foo<'a'>>`
  --> $DIR/useless_conversion.rs:155:13
   |
LL |     let _ = vec![s4, s4, s4].into_iter().into_iter();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![s4, s4, s4].into_iter()`

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
  --> $DIR/useless_conversion.rs:171:7
   |
LL |     b(vec![1, 2].into_iter());
   |       ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `vec![1, 2]`
   |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
  --> $DIR/useless_conversion.rs:161:13
   |
LL |     fn b<T: IntoIterator<Item = i32>>(_: T) {}
   |             ^^^^^^^^^^^^^^^^^^^^^^^^

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
  --> $DIR/useless_conversion.rs:172:7
   |
LL |     c(vec![1, 2].into_iter());
   |       ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `vec![1, 2]`
   |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
  --> $DIR/useless_conversion.rs:162:18
   |
LL |     fn c(_: impl IntoIterator<Item = i32>) {}
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
  --> $DIR/useless_conversion.rs:173:7
   |
LL |     d(vec![1, 2].into_iter());
   |       ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `vec![1, 2]`
   |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
  --> $DIR/useless_conversion.rs:165:12
   |
LL |         T: IntoIterator<Item = i32>,
   |            ^^^^^^^^^^^^^^^^^^^^^^^^

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
  --> $DIR/useless_conversion.rs:176:7
   |
LL |     b(vec![1, 2].into_iter().into_iter());
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`s: `vec![1, 2]`
   |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
  --> $DIR/useless_conversion.rs:161:13
   |
LL |     fn b<T: IntoIterator<Item = i32>>(_: T) {}
   |             ^^^^^^^^^^^^^^^^^^^^^^^^

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
  --> $DIR/useless_conversion.rs:177:7
   |
LL |     b(vec![1, 2].into_iter().into_iter().into_iter());
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`s: `vec![1, 2]`
   |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
  --> $DIR/useless_conversion.rs:161:13
   |
LL |     fn b<T: IntoIterator<Item = i32>>(_: T) {}
   |             ^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 24 previous errors

