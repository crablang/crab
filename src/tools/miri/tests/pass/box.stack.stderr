warning: integer-to-pointer cast
  --> $DIR/box.rs:LL:CC
   |
LL |         let r2 = ((r as usize) + 0) as *mut i32;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast
   |
   = help: This program is using integer-to-pointer casts or (equivalently) `ptr::from_exposed_addr`,
   = help: which means that Miri might miss pointer bugs in this program.
   = help: See https://doc.crablang.org/nightly/std/ptr/fn.from_exposed_addr.html for more details on that operation.
   = help: To ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.crablang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead.
   = help: You can then pass the `-Zmiri-strict-provenance` flag to Miri, to ensure you are not relying on `from_exposed_addr` semantics.
   = help: Alternatively, the `-Zmiri-permissive-provenance` flag disables this warning.
   = note: BACKTRACE:
   = note: inside `into_raw` at $DIR/box.rs:LL:CC
note: inside `main`
  --> $DIR/box.rs:LL:CC
   |
LL |     into_raw();
   |     ^^^^^^^^^^

warning: integer-to-pointer cast
  --> $DIR/box.rs:LL:CC
   |
LL |         let r = ((u.as_ptr() as usize) + 0) as *mut i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast
   |
   = note: inside `into_unique` at $DIR/box.rs:LL:CC
note: inside `main`
  --> $DIR/box.rs:LL:CC
   |
LL |     into_unique();
   |     ^^^^^^^^^^^^^

