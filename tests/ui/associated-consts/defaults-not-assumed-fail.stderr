error[E0080]: evaluation of `<() as Tr>::B` failed
  --> $DIR/defaults-not-assumed-fail.rs:8:19
   |
LL |     const B: u8 = Self::A + 1;
   |                   ^^^^^^^^^^^ attempt to compute `u8::MAX + 1_u8`, which would overflow

note: erroneous constant used
  --> $DIR/defaults-not-assumed-fail.rs:33:16
   |
LL |     assert_eq!(<() as Tr>::B, 0);    // causes the error above
   |                ^^^^^^^^^^^^^

note: erroneous constant used
  --> $DIR/defaults-not-assumed-fail.rs:33:5
   |
LL |     assert_eq!(<() as Tr>::B, 0);    // causes the error above
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this note originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

note: erroneous constant used
  --> $DIR/defaults-not-assumed-fail.rs:33:5
   |
LL |     assert_eq!(<() as Tr>::B, 0);    // causes the error above
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this note originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

note: erroneous constant used
  --> $DIR/defaults-not-assumed-fail.rs:33:5
   |
LL |     assert_eq!(<() as Tr>::B, 0);    // causes the error above
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this note originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0080`.
