error[E0658]: crablang-call ABI is subject to change
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:12:12
   |
LL |     extern "crablang-call" fn call(self, args: ()) -> () {}
   |            ^^^^^^^^^^^
   |
   = note: see issue #29625 <https://github.com/crablang/crablang/issues/29625> for more information
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0658]: crablang-call ABI is subject to change
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:19:12
   |
LL |     extern "crablang-call" fn call_once(self, args: ()) -> () {}
   |            ^^^^^^^^^^^
   |
   = note: see issue #29625 <https://github.com/crablang/crablang/issues/29625> for more information
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0658]: crablang-call ABI is subject to change
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:26:12
   |
LL |     extern "crablang-call" fn call_mut(&self, args: ()) -> () {}
   |            ^^^^^^^^^^^
   |
   = note: see issue #29625 <https://github.com/crablang/crablang/issues/29625> for more information
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0658]: crablang-call ABI is subject to change
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:33:12
   |
LL |     extern "crablang-call" fn call_once(&self, args: ()) -> () {}
   |            ^^^^^^^^^^^
   |
   = note: see issue #29625 <https://github.com/crablang/crablang/issues/29625> for more information
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:9:6
   |
LL | impl Fn<()> for Foo {
   |      ^^^^^^
   |
   = note: see issue #29625 <https://github.com/crablang/crablang/issues/29625> for more information
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0183]: manual implementations of `Fn` are experimental
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:9:6
   |
LL | impl Fn<()> for Foo {
   |      ^^^^^^ manual implementations of `Fn` are experimental
   |
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0183]: manual implementations of `FnOnce` are experimental
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:16:6
   |
LL | impl FnOnce() for Foo1 {
   |      ^^^^^^^^ manual implementations of `FnOnce` are experimental
   |
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0229]: associated type bindings are not allowed here
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:16:6
   |
LL | impl FnOnce() for Foo1 {
   |      ^^^^^^^^ associated type not allowed here
   |
help: parenthesized trait syntax expands to `FnOnce<(), Output=()>`
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:16:6
   |
LL | impl FnOnce() for Foo1 {
   |      ^^^^^^^^

error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:23:6
   |
LL | impl FnMut<()> for Bar {
   |      ^^^^^^^^^
   |
   = note: see issue #29625 <https://github.com/crablang/crablang/issues/29625> for more information
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0183]: manual implementations of `FnMut` are experimental
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:23:6
   |
LL | impl FnMut<()> for Bar {
   |      ^^^^^^^^^ manual implementations of `FnMut` are experimental
   |
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:30:6
   |
LL | impl FnOnce<()> for Baz {
   |      ^^^^^^^^^^
   |
   = note: see issue #29625 <https://github.com/crablang/crablang/issues/29625> for more information
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error[E0183]: manual implementations of `FnOnce` are experimental
  --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:30:6
   |
LL | impl FnOnce<()> for Baz {
   |      ^^^^^^^^^^ manual implementations of `FnOnce` are experimental
   |
   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable

error: aborting due to 12 previous errors

Some errors have detailed explanations: E0183, E0229, E0658.
For more information about an error, try `crablangc --explain E0183`.
