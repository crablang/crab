error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:18:44
   |
LL |     static a: RefCell<HashMap<i32, Vec<Vec<Foo>>>> = RefCell::new(HashMap::new());
   |                                            ^^^ expected 2 lifetime parameters
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL |     static a: RefCell<HashMap<i32, Vec<Vec<Foo<'static, 'static>>>>> = RefCell::new(HashMap::new());
   |                                               ++++++++++++++++++

error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:18:44
   |
LL | / thread_local! {
LL | |     static a: RefCell<HashMap<i32, Vec<Vec<Foo>>>> = RefCell::new(HashMap::new());
   | |                                            ^^^ expected 2 lifetime parameters
LL | |
LL | |
LL | | }
   | |_-
   |
   = help: this function's return type contains a borrowed value, but the signature does not say which one of `init`'s 3 lifetimes it is borrowed from

error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:23:44
   |
LL |     static b: RefCell<HashMap<i32, Vec<Vec<&Bar>>>> = RefCell::new(HashMap::new());
   |                                            ^^^^ expected 2 lifetime parameters
   |                                            |
   |                                            expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL |     static b: RefCell<HashMap<i32, Vec<Vec<&'static Bar<'static, 'static>>>>> = RefCell::new(HashMap::new());
   |                                             +++++++    ++++++++++++++++++

error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:23:44
   |
LL | / thread_local! {
LL | |     static b: RefCell<HashMap<i32, Vec<Vec<&Bar>>>> = RefCell::new(HashMap::new());
   | |                                            ^^^^ expected 2 lifetime parameters
   | |                                            |
   | |                                            expected named lifetime parameter
LL | |
LL | |
LL | | }
   | |_-
   |
   = help: this function's return type contains a borrowed value, but the signature does not say which one of `init`'s 4 lifetimes it is borrowed from

error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:28:47
   |
LL |     static c: RefCell<HashMap<i32, Vec<Vec<Qux<i32>>>>> = RefCell::new(HashMap::new());
   |                                               ^ expected 2 lifetime parameters
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL |     static c: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                +++++++++++++++++

error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:28:47
   |
LL | / thread_local! {
LL | |     static c: RefCell<HashMap<i32, Vec<Vec<Qux<i32>>>>> = RefCell::new(HashMap::new());
   | |                                               ^ expected 2 lifetime parameters
LL | |
LL | |
LL | | }
   | |_-
   |
   = help: this function's return type contains a borrowed value, but the signature does not say which one of `init`'s 3 lifetimes it is borrowed from

error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:33:44
   |
LL |     static d: RefCell<HashMap<i32, Vec<Vec<&Tar<i32>>>>> = RefCell::new(HashMap::new());
   |                                            ^   ^ expected 2 lifetime parameters
   |                                            |
   |                                            expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL |     static d: RefCell<HashMap<i32, Vec<Vec<&'static Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                             +++++++     +++++++++++++++++

error[E0106]: missing lifetime specifiers
  --> $DIR/missing-lifetime-specifier.rs:33:44
   |
LL | / thread_local! {
LL | |     static d: RefCell<HashMap<i32, Vec<Vec<&Tar<i32>>>>> = RefCell::new(HashMap::new());
   | |                                            ^   ^ expected 2 lifetime parameters
   | |                                            |
   | |                                            expected named lifetime parameter
LL | |
LL | |
LL | | }
   | |_-
   |
   = help: this function's return type contains a borrowed value, but the signature does not say which one of `init`'s 4 lifetimes it is borrowed from

error[E0106]: missing lifetime specifier
  --> $DIR/missing-lifetime-specifier.rs:47:44
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                            ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&'static Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                             +++++++

error[E0106]: missing lifetime specifier
  --> $DIR/missing-lifetime-specifier.rs:47:44
   |
LL | / thread_local! {
LL | |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   | |                                            ^ expected named lifetime parameter
LL | |
LL | |
...  |
LL | |
LL | | }
   | |_-
   |
   = help: this function's return type contains a borrowed value, but the signature does not say which one of `init`'s 3 lifetimes it is borrowed from

error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:39:44
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                            ^^^ ------- supplied 1 lifetime argument
   |                                            |
   |                                            expected 2 lifetime arguments
   |
note: union defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:11:11
   |
LL | pub union Qux<'t, 'k, I> {
   |           ^^^ --  --
help: add missing lifetime argument
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                       +++++++++

error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:39:44
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                            ^^^ ------- supplied 1 lifetime argument
   |                                            |
   |                                            expected 2 lifetime arguments
   |
note: union defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:11:11
   |
LL | pub union Qux<'t, 'k, I> {
   |           ^^^ --  --
help: add missing lifetime argument
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                       +++++++++

error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:39:44
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                            ^^^ ------- supplied 1 lifetime argument
   |                                            |
   |                                            expected 2 lifetime arguments
   |
note: union defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:11:11
   |
LL | pub union Qux<'t, 'k, I> {
   |           ^^^ --  --
help: add missing lifetime argument
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                       +++++++++

error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:39:44
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                            ^^^ ------- supplied 1 lifetime argument
   |                                            |
   |                                            expected 2 lifetime arguments
   |
note: union defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:11:11
   |
LL | pub union Qux<'t, 'k, I> {
   |           ^^^ --  --
help: add missing lifetime argument
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                       +++++++++

error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:39:44
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                            ^^^ ------- supplied 1 lifetime argument
   |                                            |
   |                                            expected 2 lifetime arguments
   |
note: union defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:11:11
   |
LL | pub union Qux<'t, 'k, I> {
   |           ^^^ --  --
help: add missing lifetime argument
   |
LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                       +++++++++

error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:47:45
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                             ^^^ ------- supplied 1 lifetime argument
   |                                             |
   |                                             expected 2 lifetime arguments
   |
note: trait defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:15:7
   |
LL | trait Tar<'t, 'k, I> {}
   |       ^^^ --  --
help: add missing lifetime argument
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                        +++++++++

error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:47:45
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                             ^^^ ------- supplied 1 lifetime argument
   |                                             |
   |                                             expected 2 lifetime arguments
   |
note: trait defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:15:7
   |
LL | trait Tar<'t, 'k, I> {}
   |       ^^^ --  --
help: add missing lifetime argument
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                        +++++++++

error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:47:45
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                             ^^^ ------- supplied 1 lifetime argument
   |                                             |
   |                                             expected 2 lifetime arguments
   |
note: trait defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:15:7
   |
LL | trait Tar<'t, 'k, I> {}
   |       ^^^ --  --
help: add missing lifetime argument
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                        +++++++++

error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:47:45
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                             ^^^ ------- supplied 1 lifetime argument
   |                                             |
   |                                             expected 2 lifetime arguments
   |
note: trait defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:15:7
   |
LL | trait Tar<'t, 'k, I> {}
   |       ^^^ --  --
help: add missing lifetime argument
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                        +++++++++

error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied
  --> $DIR/missing-lifetime-specifier.rs:47:45
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                             ^^^ ------- supplied 1 lifetime argument
   |                                             |
   |                                             expected 2 lifetime arguments
   |
note: trait defined here, with 2 lifetime parameters: `'t`, `'k`
  --> $DIR/missing-lifetime-specifier.rs:15:7
   |
LL | trait Tar<'t, 'k, I> {}
   |       ^^^ --  --
help: add missing lifetime argument
   |
LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());
   |                                                        +++++++++

error: aborting due to 20 previous errors

Some errors have detailed explanations: E0106, E0107.
For more information about an error, try `crablangc --explain E0106`.
