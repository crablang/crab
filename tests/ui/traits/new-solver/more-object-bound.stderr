error[E0277]: the trait bound `dyn Trait<A = A, B = B>: Trait` is not satisfied
  --> $DIR/more-object-bound.rs:12:17
   |
LL |     foo::<A, B, dyn Trait<A = A, B = B>>(x)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Trait` is not implemented for `dyn Trait<A = A, B = B>`
   |
note: required by a bound in `foo`
  --> $DIR/more-object-bound.rs:18:8
   |
LL | fn foo<A, B, T: ?Sized>(x: T::A) -> B
   |    --- required by a bound in this function
LL | where
LL |     T: Trait<B = B>,
   |        ^^^^^^^^^^^^ required by this bound in `foo`
help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement
   |
LL | fn transmute<A, B>(x: A) -> B where dyn Trait<A = A, B = B>: Trait {
   |                               ++++++++++++++++++++++++++++++++++++

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0277`.
