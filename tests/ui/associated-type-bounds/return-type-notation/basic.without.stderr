warning: the feature `return_type_notation` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/basic.rs:5:12
   |
LL | #![feature(return_type_notation, async_fn_in_trait)]
   |            ^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #109417 <https://github.com/crablang/crablang/issues/109417> for more information
   = note: `#[warn(incomplete_features)]` on by default

warning: the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/basic.rs:5:34
   |
LL | #![feature(return_type_notation, async_fn_in_trait)]
   |                                  ^^^^^^^^^^^^^^^^^
   |
   = note: see issue #91611 <https://github.com/crablang/crablang/issues/91611> for more information

error: future cannot be sent between threads safely
  --> $DIR/basic.rs:24:13
   |
LL |     is_send(foo::<T>());
   |             ^^^^^^^^^^ future returned by `foo` is not `Send`
   |
   = help: within `impl Future<Output = Result<(), ()>>`, the trait `Send` is not implemented for `impl Future<Output = Result<(), ()>>`
note: future is not `Send` as it awaits another future which is not `Send`
  --> $DIR/basic.rs:14:5
   |
LL |     T::method().await?;
   |     ^^^^^^^^^^^ await occurs here on type `impl Future<Output = Result<(), ()>>`, which is not `Send`
note: required by a bound in `is_send`
  --> $DIR/basic.rs:18:20
   |
LL | fn is_send(_: impl Send) {}
   |                    ^^^^ required by this bound in `is_send`

error: aborting due to previous error; 2 warnings emitted

