error[E0053]: method `from` has an incompatible type for trait
  --> $DIR/issue-90444.rs:3:16
   |
LL |     fn from(_: fn((), (), &mut ())) -> Self {
   |                ^^^^^^^^^^^^^^^^^^^
   |                |
   |                types differ in mutability
   |                help: change the parameter type to match the trait: `for<'a> fn((), (), &'a ())`
   |
   = note: expected signature `fn(for<'a> fn((), (), &'a ())) -> A`
              found signature `fn(for<'a> fn((), (), &'a mut ())) -> A`

error[E0053]: method `from` has an incompatible type for trait
  --> $DIR/issue-90444.rs:11:16
   |
LL |     fn from(_: fn((), (), u64)) -> Self {
   |                ^^^^^^^^^^^^^^^
   |                |
   |                expected `u32`, found `u64`
   |                help: change the parameter type to match the trait: `fn((), (), u32)`
   |
   = note: expected signature `fn(fn((), (), u32)) -> B`
              found signature `fn(fn((), (), u64)) -> B`

error: aborting due to 2 previous errors

For more information about this error, try `crablangc --explain E0053`.
