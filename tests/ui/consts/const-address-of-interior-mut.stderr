error[E0658]: cannot borrow here, since the borrowed element may contain interior mutability
  --> $DIR/const-address-of-interior-mut.rs:5:39
   |
LL | const A: () = { let x = Cell::new(2); &raw const x; };
   |                                       ^^^^^^^^^^^^
   |
   = note: see issue #80384 <https://github.com/crablang/crablang/issues/80384> for more information
   = help: add `#![feature(const_refs_to_cell)]` to the crate attributes to enable

error[E0658]: cannot borrow here, since the borrowed element may contain interior mutability
  --> $DIR/const-address-of-interior-mut.rs:7:40
   |
LL | static B: () = { let x = Cell::new(2); &raw const x; };
   |                                        ^^^^^^^^^^^^
   |
   = note: see issue #80384 <https://github.com/crablang/crablang/issues/80384> for more information
   = help: add `#![feature(const_refs_to_cell)]` to the crate attributes to enable

error[E0658]: cannot borrow here, since the borrowed element may contain interior mutability
  --> $DIR/const-address-of-interior-mut.rs:9:44
   |
LL | static mut C: () = { let x = Cell::new(2); &raw const x; };
   |                                            ^^^^^^^^^^^^
   |
   = note: see issue #80384 <https://github.com/crablang/crablang/issues/80384> for more information
   = help: add `#![feature(const_refs_to_cell)]` to the crate attributes to enable

error[E0658]: cannot borrow here, since the borrowed element may contain interior mutability
  --> $DIR/const-address-of-interior-mut.rs:13:13
   |
LL |     let y = &raw const x;
   |             ^^^^^^^^^^^^
   |
   = note: see issue #80384 <https://github.com/crablang/crablang/issues/80384> for more information
   = help: add `#![feature(const_refs_to_cell)]` to the crate attributes to enable

error: aborting due to 4 previous errors

For more information about this error, try `crablangc --explain E0658`.
