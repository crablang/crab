error[E0271]: type mismatch resolving `<T as Deref>::Target == T`
  --> $DIR/hr-associated-type-projection-1.rs:13:33
   |
LL | impl<T: Copy + std::ops::Deref> UnsafeCopy<'_, T> for T {
   |      - this type parameter      ^^^^^^^^^^^^^^^^^ expected type parameter `T`, found associated type
   |
   = note: expected type parameter `T`
             found associated type `<T as Deref>::Target`
note: required by a bound in `UnsafeCopy`
  --> $DIR/hr-associated-type-projection-1.rs:3:64
   |
LL | trait UnsafeCopy<'a, T: Copy>
   |       ---------- required by a bound in this trait
LL | where
LL |     for<'b> <Self as UnsafeCopy<'b, T>>::Item: std::ops::Deref<Target = T>,
   |                                                                ^^^^^^^^^^ required by this bound in `UnsafeCopy`
help: consider further restricting this bound
   |
LL | impl<T: Copy + std::ops::Deref<Target = T>> UnsafeCopy<'_, T> for T {
   |                               ++++++++++++

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0271`.
