warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/closures.rs:3:12
   |
LL | #![feature(generic_const_exprs, crablangc_attrs)]
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #76560 <https://github.com/crablang/crablang/issues/76560> for more information
   = note: `#[warn(incomplete_features)]` on by default

error: item has unused generic parameters
  --> $DIR/closures.rs:19:19
   |
LL | pub fn unused<const T: usize>() -> usize {
   |               -------------- generic parameter `T` is unused
LL |
LL |     let add_one = |x: usize| x + 1;
   |                   ^^^^^^^^^^

error: item has unused generic parameters
  --> $DIR/closures.rs:17:8
   |
LL | pub fn unused<const T: usize>() -> usize {
   |        ^^^^^^ -------------- generic parameter `T` is unused

error: item has unused generic parameters
  --> $DIR/closures.rs:28:19
   |
LL | pub fn used_parent<const T: usize>() -> usize {
   |                    -------------- generic parameter `T` is unused
LL |     let x: usize = T;
LL |     let add_one = |x: usize| x + 1;
   |                   ^^^^^^^^^^

error: item has unused generic parameters
  --> $DIR/closures.rs:48:13
   |
LL | pub fn unused_upvar<const T: usize>() -> usize {
   |                     -------------- generic parameter `T` is unused
LL |     let x: usize = T;
LL |     let y = || x;
   |             ^^

error: aborting due to 4 previous errors; 1 warning emitted

