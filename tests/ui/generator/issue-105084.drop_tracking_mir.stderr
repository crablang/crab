error[E0382]: borrow of moved value: `g`
  --> $DIR/issue-105084.rs:45:14
   |
LL |     let mut g = || {
   |         ----- move occurs because `g` has type `[generator@$DIR/issue-105084.rs:22:17: 22:19]`, which does not implement the `Copy` trait
...
LL |     let mut h = copy(g);
   |                      - value moved here
...
LL |     Pin::new(&mut g).resume(());
   |              ^^^^^^ value borrowed here after move
   |
note: consider changing this parameter type in function `copy` to borrow instead if owning the value isn't necessary
  --> $DIR/issue-105084.rs:17:21
   |
LL | fn copy<T: Copy>(x: T) -> T {
   |    ----             ^ this parameter takes ownership of the value
   |    |
   |    in this function
help: consider cloning the value if the performance cost is acceptable
   |
LL |     let mut h = copy(g.clone());
   |                       ++++++++

error[E0277]: the trait bound `Box<(i32, ())>: Copy` is not satisfied in `[generator@$DIR/issue-105084.rs:22:17: 22:19]`
  --> $DIR/issue-105084.rs:39:17
   |
LL |     let mut g = || {
   |                 -- within this `[generator@$DIR/issue-105084.rs:22:17: 22:19]`
...
LL |     let mut h = copy(g);
   |                 ^^^^ within `[generator@$DIR/issue-105084.rs:22:17: 22:19]`, the trait `Copy` is not implemented for `Box<(i32, ())>`
   |
note: generator does not implement `Copy` as this value is used across a yield
  --> $DIR/issue-105084.rs:29:22
   |
LL |         Box::new((5, yield));
   |         -------------^^^^^--
   |         |            |
   |         |            yield occurs here, with `Box::new((5, yield))` maybe used later
   |         has type `Box<(i32, ())>` which does not implement `Copy`
note: required by a bound in `copy`
  --> $DIR/issue-105084.rs:17:12
   |
LL | fn copy<T: Copy>(x: T) -> T {
   |            ^^^^ required by this bound in `copy`

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0277, E0382.
For more information about an error, try `crablangc --explain E0277`.
