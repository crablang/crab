error[E0038]: the trait `Trait` cannot be made into an object
  --> $DIR/E0038.rs:5:20
   |
LL | fn call_foo(x: Box<dyn Trait>) {
   |                    ^^^^^^^^^ `Trait` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.crablang.org/reference/items/traits.html#object-safety>
  --> $DIR/E0038.rs:2:22
   |
LL | trait Trait {
   |       ----- this trait cannot be made into an object...
LL |     fn foo(&self) -> Self;
   |                      ^^^^ ...because method `foo` references the `Self` type in its return type
   = help: consider moving `foo` to another trait

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0038`.
