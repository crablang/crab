error[E0507]: cannot move out of a mutable reference
  --> $DIR/issue-20801.rs:26:22
   |
LL |     let a = unsafe { *mut_ref() };
   |                      ^^^^^^^^^^ move occurs because value has type `T`, which does not implement the `Copy` trait
   |
help: consider removing the dereference here
   |
LL -     let a = unsafe { *mut_ref() };
LL +     let a = unsafe { mut_ref() };
   |

error[E0507]: cannot move out of a shared reference
  --> $DIR/issue-20801.rs:29:22
   |
LL |     let b = unsafe { *imm_ref() };
   |                      ^^^^^^^^^^ move occurs because value has type `T`, which does not implement the `Copy` trait
   |
help: consider removing the dereference here
   |
LL -     let b = unsafe { *imm_ref() };
LL +     let b = unsafe { imm_ref() };
   |

error[E0507]: cannot move out of a raw pointer
  --> $DIR/issue-20801.rs:32:22
   |
LL |     let c = unsafe { *mut_ptr() };
   |                      ^^^^^^^^^^ move occurs because value has type `T`, which does not implement the `Copy` trait
   |
help: consider removing the dereference here
   |
LL -     let c = unsafe { *mut_ptr() };
LL +     let c = unsafe { mut_ptr() };
   |

error[E0507]: cannot move out of a raw pointer
  --> $DIR/issue-20801.rs:35:22
   |
LL |     let d = unsafe { *const_ptr() };
   |                      ^^^^^^^^^^^^ move occurs because value has type `T`, which does not implement the `Copy` trait
   |
help: consider removing the dereference here
   |
LL -     let d = unsafe { *const_ptr() };
LL +     let d = unsafe { const_ptr() };
   |

error: aborting due to 4 previous errors

For more information about this error, try `crablangc --explain E0507`.
