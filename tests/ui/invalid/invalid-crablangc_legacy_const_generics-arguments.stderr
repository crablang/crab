error: suffixed literals are not allowed in attributes
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:21:31
   |
LL | #[crablangc_legacy_const_generics(0usize)]
   |                               ^^^^^^
   |
   = help: instead of using a suffixed literal (`1u8`, `1.0f32`, etc.), use an unsuffixed version (`1`, `1.0`, etc.)

error: malformed `crablangc_legacy_const_generics` attribute input
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:37:1
   |
LL | #[crablangc_legacy_const_generics]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: must be of the form: `#[crablangc_legacy_const_generics(N)]`

error: malformed `crablangc_legacy_const_generics` attribute input
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:40:1
   |
LL | #[crablangc_legacy_const_generics = 1]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: must be of the form: `#[crablangc_legacy_const_generics(N)]`

error: #[crablangc_legacy_const_generics] must have one index for each generic parameter
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:3:1
   |
LL | #[crablangc_legacy_const_generics(0)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL | fn foo1() {}
   |        - generic parameters

error: index exceeds number of arguments
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:6:31
   |
LL | #[crablangc_legacy_const_generics(1)]
   |                               ^ there is only 1 argument

error: index exceeds number of arguments
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:9:31
   |
LL | #[crablangc_legacy_const_generics(2)]
   |                               ^ there are only 2 arguments

error: arguments should be non-negative integers
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:12:31
   |
LL | #[crablangc_legacy_const_generics(a)]
   |                               ^

error: arguments should be non-negative integers
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:15:34
   |
LL | #[crablangc_legacy_const_generics(1, a, 2, b)]
   |                                  ^     ^

error: attribute should be applied to a function definition
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:18:1
   |
LL | #[crablangc_legacy_const_generics(0)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL | struct S;
   | --------- not a function definition

error: #[crablangc_legacy_const_generics] functions must only have const generics
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:29:1
   |
LL | #[crablangc_legacy_const_generics(0)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL | fn foo8<X>() {}
   |         - non-const generic parameter

error: attribute should be applied to a function definition
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:33:5
   |
LL |     #[crablangc_legacy_const_generics(0)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL |     fn foo9<const X: usize>() {}
   |     ---------------------------- not a function definition

error: attribute should be applied to a function definition
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:25:5
   |
LL |     #[crablangc_legacy_const_generics(1)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL |     fn foo7<const X: usize>();
   |     -------------------------- not a function definition

error[E0044]: foreign items may not have const parameters
  --> $DIR/invalid-crablangc_legacy_const_generics-arguments.rs:26:5
   |
LL |     fn foo7<const X: usize>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ can't have const parameters
   |
   = help: replace the const parameters with concrete consts

error: aborting due to 13 previous errors

For more information about this error, try `crablangc --explain E0044`.
