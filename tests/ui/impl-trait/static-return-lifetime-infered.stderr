error[E0700]: hidden type for `impl Iterator<Item = u32>` captures lifetime that does not appear in bounds
  --> $DIR/static-return-lifetime-infered.rs:7:9
   |
LL |     fn iter_values_anon(&self) -> impl Iterator<Item=u32> {
   |                         -----     ----------------------- opaque type defined here
   |                         |
   |                         hidden type `Map<std::slice::Iter<'_, (u32, u32)>, [closure@$DIR/static-return-lifetime-infered.rs:7:27: 7:30]>` captures the anonymous lifetime defined here
LL |         self.x.iter().map(|a| a.0)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: to declare that `impl Iterator<Item = u32>` captures `'_`, you can add an explicit `'_` lifetime bound
   |
LL |     fn iter_values_anon(&self) -> impl Iterator<Item=u32> + '_ {
   |                                                           ++++

error[E0700]: hidden type for `impl Iterator<Item = u32>` captures lifetime that does not appear in bounds
  --> $DIR/static-return-lifetime-infered.rs:11:9
   |
LL |     fn iter_values<'a>(&'a self) -> impl Iterator<Item=u32> {
   |                    --               ----------------------- opaque type defined here
   |                    |
   |                    hidden type `Map<std::slice::Iter<'a, (u32, u32)>, [closure@$DIR/static-return-lifetime-infered.rs:11:27: 11:30]>` captures the lifetime `'a` as defined here
LL |         self.x.iter().map(|a| a.0)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: to declare that `impl Iterator<Item = u32>` captures `'a`, you can add an explicit `'a` lifetime bound
   |
LL |     fn iter_values<'a>(&'a self) -> impl Iterator<Item=u32> + 'a {
   |                                                             ++++

error: aborting due to 2 previous errors

For more information about this error, try `crablangc --explain E0700`.
