error: unconstrained opaque type
  --> $DIR/recursive-type-alias-impl-trait-declaration-too-subtle.rs:4:16
   |
LL |     type Foo = impl PartialEq<(Foo, i32)>;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `Foo` must be used in combination with a concrete type within the same module

error[E0053]: method `eq` has an incompatible type for trait
  --> $DIR/recursive-type-alias-impl-trait-declaration-too-subtle.rs:10:30
   |
LL |     type Foo = impl PartialEq<(Foo, i32)>;
   |                -------------------------- the found opaque type
...
LL |         fn eq(&self, _other: &(Foo, i32)) -> bool {
   |                              ^^^^^^^^^^^
   |                              |
   |                              expected `a::Bar`, found opaque type
   |                              help: change the parameter type to match the trait: `&(a::Bar, i32)`
   |
   = note: expected signature `fn(&a::Bar, &(a::Bar, i32)) -> _`
              found signature `fn(&a::Bar, &(a::Foo, i32)) -> _`

error: unconstrained opaque type
  --> $DIR/recursive-type-alias-impl-trait-declaration-too-subtle.rs:18:16
   |
LL |     type Foo = impl PartialEq<(Foo, i32)>;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `Foo` must be used in combination with a concrete type within the same module

error[E0053]: method `eq` has an incompatible type for trait
  --> $DIR/recursive-type-alias-impl-trait-declaration-too-subtle.rs:24:30
   |
LL |     type Foo = impl PartialEq<(Foo, i32)>;
   |                -------------------------- the expected opaque type
...
LL |         fn eq(&self, _other: &(Bar, i32)) -> bool {
   |                              ^^^^^^^^^^^
   |                              |
   |                              expected opaque type, found `b::Bar`
   |                              help: change the parameter type to match the trait: `&(b::Foo, i32)`
   |
   = note: expected signature `fn(&b::Bar, &(b::Foo, i32)) -> _`
              found signature `fn(&b::Bar, &(b::Bar, i32)) -> _`

error: aborting due to 4 previous errors

For more information about this error, try `crablangc --explain E0053`.
