note: external requirements
  --> $DIR/escape-upvar-ref.rs:23:27
   |
LL |         let mut closure = || p = &y;
   |                           ^^
   |
   = note: defining type: test::{closure#0} with closure substs [
               i16,
               extern "crablang-call" fn(()),
               (&'_#1r mut &'_#2r i32, &'_#3r i32),
           ]
   = note: number of external vids: 4
   = note: where '_#3r: '_#2r

note: no external requirements
  --> $DIR/escape-upvar-ref.rs:17:1
   |
LL | fn test() {
   | ^^^^^^^^^
   |
   = note: defining type: test

error[E0597]: `y` does not live long enough
  --> $DIR/escape-upvar-ref.rs:23:35
   |
LL |         let mut closure = || p = &y;
   |                           --      ^ borrowed value does not live long enough
   |                           |
   |                           value captured here
...
LL |     }
   |     - `y` dropped here while still borrowed
LL |
LL |     deref(p);
   |           - borrow later used here

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0597`.
