note: external requirements
  --> $DIR/ty-param-closure-outlives-from-return-type.rs:26:23
   |
LL |     with_signature(x, |y| y)
   |                       ^^^
   |
   = note: defining type: no_region::<'_#1r, T>::{closure#0} with closure substs [
               i32,
               extern "crablang-call" fn((std::boxed::Box<T>,)) -> std::boxed::Box<(dyn std::fmt::Debug + '_#2r)>,
               (),
           ]
   = note: number of external vids: 3
   = note: where T: '_#2r

note: no external requirements
  --> $DIR/ty-param-closure-outlives-from-return-type.rs:15:1
   |
LL | / fn no_region<'a, T>(x: Box<T>) -> Box<dyn Debug + 'a>
LL | | where
LL | |     T: Debug,
   | |_____________^
   |
   = note: defining type: no_region::<'_#1r, T>

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/ty-param-closure-outlives-from-return-type.rs:26:27
   |
LL |     with_signature(x, |y| y)
   |                           ^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound...
   |
LL |     T: Debug + 'a,
   |              ++++

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/ty-param-closure-outlives-from-return-type.rs:41:5
   |
LL |     x
   |     ^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound...
   |
LL |     T: 'b + Debug + 'a,
   |                   ++++

error: aborting due to 2 previous errors

For more information about this error, try `crablangc --explain E0309`.
