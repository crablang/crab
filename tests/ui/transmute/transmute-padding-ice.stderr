error[E0277]: `B` cannot be safely transmuted into `A` in the defining scope of `assert::Context`.
  --> $DIR/transmute-padding-ice.rs:27:40
   |
LL |     assert::is_maybe_transmutable::<B, A>();
   |                                        ^ `B` cannot be safely transmuted into `A` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<B, assert::Context, Assume { alignment: true, lifetimes: true, safety: true, validity: true }>` is not implemented for `A`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/transmute-padding-ice.rs:11:14
   |
LL |       pub fn is_maybe_transmutable<Src, Dst>()
   |              --------------------- required by a bound in this function
LL |       where
LL |           Dst: BikeshedIntrinsicFrom<
   |  ______________^
LL | |             Src,
LL | |             Context,
LL | |             { Assume { alignment: true, lifetimes: true, safety: true, validity: true } },
LL | |         >,
   | |_________^ required by this bound in `is_maybe_transmutable`

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0277`.
