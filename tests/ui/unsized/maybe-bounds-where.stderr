error: `?Trait` bounds are only permitted at the point where a type parameter is declared
  --> $DIR/maybe-bounds-where.rs:1:28
   |
LL | struct S1<T>(T) where (T): ?Sized;
   |                            ^^^^^^

error: `?Trait` bounds are only permitted at the point where a type parameter is declared
  --> $DIR/maybe-bounds-where.rs:4:27
   |
LL | struct S2<T>(T) where u8: ?Sized;
   |                           ^^^^^^

error: `?Trait` bounds are only permitted at the point where a type parameter is declared
  --> $DIR/maybe-bounds-where.rs:7:35
   |
LL | struct S3<T>(T) where &'static T: ?Sized;
   |                                   ^^^^^^

error: `?Trait` bounds are only permitted at the point where a type parameter is declared
  --> $DIR/maybe-bounds-where.rs:12:34
   |
LL | struct S4<T>(T) where for<'a> T: ?Trait<'a>;
   |                                  ^^^^^^^^^^

error: `?Trait` bounds are only permitted at the point where a type parameter is declared
  --> $DIR/maybe-bounds-where.rs:21:21
   |
LL |     fn f() where T: ?Sized {}
   |                     ^^^^^^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> $DIR/maybe-bounds-where.rs:12:11
   |
LL | struct S4<T>(T) where for<'a> T: ?Trait<'a>;
   |           ^

error[E0203]: type parameter has more than one relaxed default bound, only one is supported
  --> $DIR/maybe-bounds-where.rs:16:11
   |
LL | struct S5<T>(*const T) where T: ?Trait<'static> + ?Sized;
   |           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> $DIR/maybe-bounds-where.rs:16:11
   |
LL | struct S5<T>(*const T) where T: ?Trait<'static> + ?Sized;
   |           ^

error: aborting due to 6 previous errors; 2 warnings emitted

For more information about this error, try `crablangc --explain E0203`.
