error[E0038]: the trait `Fetcher` cannot be made into an object
  --> $DIR/issue-102762.rs:18:21
   |
LL |     fn get<'a>(self: &'a Box<Self>) -> Pin<Box<dyn Future<Output = Vec<u8>> + 'a>>
   |                      ------------- help: consider changing method `get`'s `self` parameter to be `&self`: `&Self`
...
LL | fn fetcher() -> Box<dyn Fetcher> {
   |                     ^^^^^^^^^^^ `Fetcher` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.crablang.org/reference/items/traits.html#object-safety>
  --> $DIR/issue-102762.rs:10:22
   |
LL | pub trait Fetcher: Send + Sync {
   |           ------- this trait cannot be made into an object...
LL |     fn get<'a>(self: &'a Box<Self>) -> Pin<Box<dyn Future<Output = Vec<u8>> + 'a>>
   |                      ^^^^^^^^^^^^^ ...because method `get`'s `self` parameter cannot be dispatched on

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0038`.
