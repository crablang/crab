error[E0038]: the trait `X` cannot be made into an object
  --> $DIR/object-safety-bounds.rs:7:15
   |
LL | fn f() -> Box<dyn X<U = u32>> {
   |               ^^^^^^^^^^^^^^ `X` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.crablang.org/reference/items/traits.html#object-safety>
  --> $DIR/object-safety-bounds.rs:4:13
   |
LL | trait X {
   |       - this trait cannot be made into an object...
LL |     type U: PartialEq<Self>;
   |             ^^^^^^^^^^^^^^^ ...because it uses `Self` as a type parameter

error: aborting due to previous error

For more information about this error, try `crablangc --explain E0038`.
