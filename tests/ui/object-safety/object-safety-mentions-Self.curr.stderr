error[E0038]: the trait `Bar` cannot be made into an object
  --> $DIR/object-safety-mentions-Self.rs:22:31
   |
LL | fn make_bar<T:Bar>(t: &T) -> &dyn Bar {
   |                               ^^^^^^^ `Bar` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.crablang.org/reference/items/traits.html#object-safety>
  --> $DIR/object-safety-mentions-Self.rs:11:22
   |
LL | trait Bar {
   |       --- this trait cannot be made into an object...
LL |     fn bar(&self, x: &Self);
   |                      ^^^^^ ...because method `bar` references the `Self` type in this parameter
   = help: consider moving `bar` to another trait

error[E0038]: the trait `Baz` cannot be made into an object
  --> $DIR/object-safety-mentions-Self.rs:28:31
   |
LL | fn make_baz<T:Baz>(t: &T) -> &dyn Baz {
   |                               ^^^^^^^ `Baz` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.crablang.org/reference/items/traits.html#object-safety>
  --> $DIR/object-safety-mentions-Self.rs:15:22
   |
LL | trait Baz {
   |       --- this trait cannot be made into an object...
LL |     fn baz(&self) -> Self;
   |                      ^^^^ ...because method `baz` references the `Self` type in its return type
   = help: consider moving `baz` to another trait

error: aborting due to 2 previous errors

For more information about this error, try `crablangc --explain E0038`.
