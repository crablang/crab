error: changes to closure capture in CrabLang 2021 will affect which traits the closure implements
  --> $DIR/mir_calls_to_shims.rs:20:38
   |
LL |     let result = panic::catch_unwind(move || {
   |                                      ^^^^^^^
   |                                      |
   |                                      in CrabLang 2018, this closure implements `RefUnwindSafe` as `f` implements `RefUnwindSafe`, but in CrabLang 2021, this closure will no longer implement `RefUnwindSafe` because `f` is not fully captured and `f.0` does not implement `RefUnwindSafe`
   |                                      in CrabLang 2018, this closure implements `UnwindSafe` as `f` implements `UnwindSafe`, but in CrabLang 2021, this closure will no longer implement `UnwindSafe` because `f` is not fully captured and `f.0` does not implement `UnwindSafe`
...
LL |         f.0()
   |         --- in CrabLang 2018, this closure captures all of `f`, but in CrabLang 2021, it will only capture `f.0`
   |
   = note: for more information, see <https://doc.crablang.org/nightly/edition-guide/crablang-2021/disjoint-capture-in-closures.html>
note: the lint level is defined here
  --> $DIR/mir_calls_to_shims.rs:4:9
   |
LL | #![deny(crablang_2021_incompatible_closure_captures)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: add a dummy let to cause `f` to be fully captured
   |
LL ~     let result = panic::catch_unwind(move || {
LL +         let _ = &f;
   |

error: aborting due to previous error

