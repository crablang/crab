error: label without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:52:1
   |
LL | / #[label(no_crate_example)]
LL | |
LL | | struct C {
LL | |     var: String,
LL | | }
   | |_^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:59:1
   |
LL | #[label]
   | ^^^^^^^^

error: `#[foo]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:68:1
   |
LL | #[foo]
   | ^^^^^^

error: `#[label = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:78:1
   |
LL | #[label = "..."]
   | ^^^^^^^^^^^^^^^^

error: only `no_span` is a valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:87:9
   |
LL | #[label(bug = "...")]
   |         ^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:87:1
   |
LL | #[label(bug = "...")]
   | ^^^^^^^^^^^^^^^^^^^^^

error: only `no_span` is a valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:107:9
   |
LL | #[label(slug = 4)]
   |         ^^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:107:1
   |
LL | #[label(slug = 4)]
   | ^^^^^^^^^^^^^^^^^^

error: only `no_span` is a valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:117:9
   |
LL | #[label(slug("..."))]
   |         ^^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:117:1
   |
LL | #[label(slug("..."))]
   | ^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:137:1
   |
LL | #[label()]
   | ^^^^^^^^^^

error: only `no_span` is a valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:146:27
   |
LL | #[label(no_crate_example, code = "...")]
   |                           ^^^^

error: only `no_span` is a valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:155:27
   |
LL | #[label(no_crate_example, applicability = "machine-applicable")]
   |                           ^^^^^^^^^^^^^

error: unsupported type attribute for subdiagnostic enum
  --> $DIR/subdiagnostic-derive.rs:164:1
   |
LL | #[foo]
   | ^^^^^^

error: `#[bar]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:178:5
   |
LL |     #[bar]
   |     ^^^^^^

error: `#[bar = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:190:5
   |
LL |     #[bar = "..."]
   |     ^^^^^^^^^^^^^^

error: `#[bar = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:202:5
   |
LL |     #[bar = 4]
   |     ^^^^^^^^^^

error: `#[bar(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:214:5
   |
LL |     #[bar("...")]
   |     ^^^^^^^^^^^^^

error: only `no_span` is a valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:226:13
   |
LL |     #[label(code = "...")]
   |             ^^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:226:5
   |
LL |     #[label(code = "...")]
   |     ^^^^^^^^^^^^^^^^^^^^^^

error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/subdiagnostic-derive.rs:255:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^

error: label without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:252:1
   |
LL | / #[label(no_crate_example)]
LL | |
LL | | struct W {
LL | |     #[primary_span]
LL | |
LL | |     span: String,
LL | | }
   | |_^

error: `#[applicability]` is only valid on suggestions
  --> $DIR/subdiagnostic-derive.rs:265:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: `#[bar]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:275:5
   |
LL |     #[bar]
   |     ^^^^^^
   |
   = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes

error: `#[bar = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:286:5
   |
LL |     #[bar = "..."]
   |     ^^^^^^^^^^^^^^

error: `#[bar(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:297:5
   |
LL |     #[bar("...")]
   |     ^^^^^^^^^^^^^
   |
   = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes

error: a diagnostic slug must be the first argument to the attribute
  --> $DIR/subdiagnostic-derive.rs:329:44
   |
LL | #[label(no_crate_example, no_crate::example)]
   |                                            ^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:342:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:339:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^

error: subdiagnostic kind not specified
  --> $DIR/subdiagnostic-derive.rs:348:8
   |
LL | struct AG {
   |        ^^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:385:46
   |
LL | #[suggestion(no_crate_example, code = "...", code = "...")]
   |                                              ^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:385:32
   |
LL | #[suggestion(no_crate_example, code = "...", code = "...")]
   |                                ^^^^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:403:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:400:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: the `#[applicability]` attribute can only be applied to fields of type `Applicability`
  --> $DIR/subdiagnostic-derive.rs:413:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: suggestion without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:426:1
   |
LL | #[suggestion(no_crate_example)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: invalid applicability
  --> $DIR/subdiagnostic-derive.rs:436:62
   |
LL | #[suggestion(no_crate_example, code = "...", applicability = "foo")]
   |                                                              ^^^^^

error: suggestion without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:454:1
   |
LL | / #[suggestion(no_crate_example, code = "...")]
LL | |
LL | | struct AR {
LL | |     var: String,
LL | | }
   | |_^

error: unsupported type attribute for subdiagnostic enum
  --> $DIR/subdiagnostic-derive.rs:468:1
   |
LL | #[label]
   | ^^^^^^^^

error: `var` doesn't refer to a field on this type
  --> $DIR/subdiagnostic-derive.rs:488:39
   |
LL | #[suggestion(no_crate_example, code = "{var}", applicability = "machine-applicable")]
   |                                       ^^^^^^^

error: `var` doesn't refer to a field on this type
  --> $DIR/subdiagnostic-derive.rs:507:43
   |
LL |     #[suggestion(no_crate_example, code = "{var}", applicability = "machine-applicable")]
   |                                           ^^^^^^^

error: `#[suggestion_part]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:530:5
   |
LL |     #[suggestion_part]
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: `#[suggestion_part(...)]` is only valid in multipart suggestions, use `#[primary_span]` instead

error: `#[suggestion_part(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:533:5
   |
LL |     #[suggestion_part(code = "...")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `#[suggestion_part(...)]` is only valid in multipart suggestions

error: suggestion without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:527:1
   |
LL | / #[suggestion(no_crate_example, code = "...")]
LL | |
LL | | struct BA {
LL | |     #[suggestion_part]
...  |
LL | |     var: String,
LL | | }
   | |_^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:542:42
   |
LL | #[multipart_suggestion(no_crate_example, code = "...", applicability = "machine-applicable")]
   |                                          ^^^^
   |
   = help: only `no_span`, `style` and `applicability` are valid nested attributes

error: multipart suggestion without any `#[suggestion_part(...)]` fields
  --> $DIR/subdiagnostic-derive.rs:542:1
   |
LL | / #[multipart_suggestion(no_crate_example, code = "...", applicability = "machine-applicable")]
LL | |
LL | |
LL | | struct BBa {
LL | |     var: String,
LL | | }
   | |_^

error: `#[suggestion_part(...)]` attribute without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:552:5
   |
LL |     #[suggestion_part]
   |     ^^^^^^^^^^^^^^^^^^

error: `#[suggestion_part(...)]` attribute without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:560:5
   |
LL |     #[suggestion_part()]
   |     ^^^^^^^^^^^^^^^^^^^^

error: `#[primary_span]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:569:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
   = help: multipart suggestions use one or more `#[suggestion_part]`s rather than one `#[primary_span]`

error: multipart suggestion without any `#[suggestion_part(...)]` fields
  --> $DIR/subdiagnostic-derive.rs:566:1
   |
LL | / #[multipart_suggestion(no_crate_example)]
LL | |
LL | | struct BC {
LL | |     #[primary_span]
LL | |
LL | |     span: Span,
LL | | }
   | |_^

error: `#[suggestion_part(...)]` attribute without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:577:5
   |
LL |     #[suggestion_part]
   |     ^^^^^^^^^^^^^^^^^^

error: `#[suggestion_part(...)]` attribute without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:580:5
   |
LL |     #[suggestion_part()]
   |     ^^^^^^^^^^^^^^^^^^^^

error: `code` is the only valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:583:23
   |
LL |     #[suggestion_part(foo = "bar")]
   |                       ^^^

error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/subdiagnostic-derive.rs:588:5
   |
LL |     #[suggestion_part(code = "...")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/subdiagnostic-derive.rs:591:5
   |
LL |     #[suggestion_part()]
   |     ^^^^^^^^^^^^^^^^^^^^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:599:37
   |
LL |     #[suggestion_part(code = "...", code = ",,,")]
   |                                     ^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:599:23
   |
LL |     #[suggestion_part(code = "...", code = ",,,")]
   |                       ^^^^

error: `#[applicability]` has no effect if all `#[suggestion]`/`#[multipart_suggestion]` attributes have a static `applicability = "..."`
  --> $DIR/subdiagnostic-derive.rs:628:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:676:34
   |
LL |     #[suggestion_part(code("foo"))]
   |                                  ^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:687:41
   |
LL |     #[suggestion_part(code("foo", "bar"))]
   |                                         ^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:698:30
   |
LL |     #[suggestion_part(code(3))]
   |                              ^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:709:29
   |
LL |     #[suggestion_part(code())]
   |                             ^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:764:1
   |
LL | #[suggestion(no_crate_example, code = "", style = "hidden", style = "normal")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:764:1
   |
LL | #[suggestion(no_crate_example, code = "", style = "hidden", style = "normal")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[suggestion_hidden(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:773:1
   |
LL | #[suggestion_hidden(no_crate_example, code = "")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Use `#[suggestion(..., style = "hidden")]` instead

error: `#[suggestion_hidden(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:781:1
   |
LL | #[suggestion_hidden(no_crate_example, code = "", style = "normal")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Use `#[suggestion(..., style = "hidden")]` instead

error: invalid suggestion style
  --> $DIR/subdiagnostic-derive.rs:789:51
   |
LL | #[suggestion(no_crate_example, code = "", style = "foo")]
   |                                                   ^^^^^
   |
   = help: valid styles are `normal`, `short`, `hidden`, `verbose` and `tool-only`

error: expected `= "xxx"`
  --> $DIR/subdiagnostic-derive.rs:797:49
   |
LL | #[suggestion(no_crate_example, code = "", style = 42)]
   |                                                 ^

error: a diagnostic slug must be the first argument to the attribute
  --> $DIR/subdiagnostic-derive.rs:805:48
   |
LL | #[suggestion(no_crate_example, code = "", style)]
   |                                                ^

error: expected `= "xxx"`
  --> $DIR/subdiagnostic-derive.rs:813:48
   |
LL | #[suggestion(no_crate_example, code = "", style("foo"))]
   |                                                ^

error: `#[primary_span]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:826:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
   = note: there must be exactly one primary span
   = help: to create a suggestion with multiple spans, use `#[multipart_suggestion]` instead

error: suggestion without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:823:1
   |
LL | / #[suggestion(no_crate_example, code = "")]
LL | |
LL | | struct PrimarySpanOnVec {
LL | |     #[primary_span]
...  |
LL | |     sub: Vec<Span>,
LL | | }
   | |_^

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:97:9
   |
LL | #[label("...")]
   |         ^^^^^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:313:1
   |
LL | union AC {
   | ^^^^^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:583:27
   |
LL |     #[suggestion_part(foo = "bar")]
   |                           ^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:676:28
   |
LL |     #[suggestion_part(code("foo"))]
   |                            ^^^^^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:687:28
   |
LL |     #[suggestion_part(code("foo", "bar"))]
   |                            ^^^^^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:698:28
   |
LL |     #[suggestion_part(code(3))]
   |                            ^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:721:30
   |
LL |     #[suggestion_part(code = 3)]
   |                              ^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/subdiagnostic-derive.rs:813:48
   |
LL | #[suggestion(no_crate_example, code = "", style("foo"))]
   |                                                ^ maybe a missing crate `core`?

error: cannot find attribute `foo` in this scope
  --> $DIR/subdiagnostic-derive.rs:68:3
   |
LL | #[foo]
   |   ^^^

error: cannot find attribute `foo` in this scope
  --> $DIR/subdiagnostic-derive.rs:164:3
   |
LL | #[foo]
   |   ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:178:7
   |
LL |     #[bar]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:190:7
   |
LL |     #[bar = "..."]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:202:7
   |
LL |     #[bar = 4]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:214:7
   |
LL |     #[bar("...")]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:275:7
   |
LL |     #[bar]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:286:7
   |
LL |     #[bar = "..."]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:297:7
   |
LL |     #[bar("...")]
   |       ^^^

error[E0425]: cannot find value `slug` in module `crate::fluent_generated`
  --> $DIR/subdiagnostic-derive.rs:127:9
   |
LL | #[label(slug)]
   |         ^^^^ not found in `crate::fluent_generated`

error[E0425]: cannot find value `__code_29` in this scope
  --> $DIR/subdiagnostic-derive.rs:715:10
   |
LL | #[derive(Subdiagnostic)]
   |          ^^^^^^^^^^^^^ not found in this scope
   |
   = note: this error originates in the derive macro `Subdiagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 86 previous errors

Some errors have detailed explanations: E0425, E0433.
For more information about an error, try `rustc --explain E0425`.
