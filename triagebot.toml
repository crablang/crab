[relabel]
allow-unauthenticated = [
    "A-*",
    "C-*",
    "D-*",
    "E-*",
    "F-*",
    "I-*",
    "NLL-*",
    "O-*",
    "S-*",
    "T-*",
    "WG-*",
    "const-hack",
    "llvm-main",
    "needs-fcp",
    "relnotes",
    "requires-*",
    "regression-*",
    "perf-*",
    "AsyncAwait-OnDeck",
]

[glacier]

[ping.icebreakers-llvm]
alias = ["llvm", "llvms"]
message = """\
Hey LLVM ICE-breakers! This bug has been identified as a good
"LLVM ICE-breaking candidate". In case it's useful, here are some
[instructions] for tackling these sorts of bugs. Maybe take a look?
Thanks! <3

[instructions]: https://crablangc-dev-guide.crablang.org/notification-groups/llvm.html
"""
label = "ICEBreaker-LLVM"

[ping.icebreakers-cleanup-crew]
alias = ["cleanup", "cleanups", "cleanup-crew", "shrink", "reduce", "bisect"]
message = """\
Hey Cleanup Crew ICE-breakers! This bug has been identified as a good
"Cleanup ICE-breaking candidate". In case it's useful, here are some
[instructions] for tackling these sorts of bugs. Maybe take a look?
Thanks! <3

[instructions]: https://crablangc-dev-guide.crablang.org/notification-groups/cleanup-crew.html
"""
label = "ICEBreaker-Cleanup-Crew"

[ping.windows]
message = """\
Hey Windows Group! This bug has been identified as a good "Windows candidate".
In case it's useful, here are some [instructions] for tackling these sorts of
bugs. Maybe take a look?
Thanks! <3

[instructions]: https://crablangc-dev-guide.crablang.org/notification-groups/windows.html
"""
label = "O-windows"

[ping.arm]
message = """\
Hey ARM Group! This bug has been identified as a good "ARM candidate".
In case it's useful, here are some [instructions] for tackling these sorts of
bugs. Maybe take a look?
Thanks! <3

[instructions]: https://crablangc-dev-guide.crablang.org/notification-groups/arm.html
"""
label = "O-ARM"

[ping.risc-v]
message = """\
Hey RISC-V Group! This bug has been identified as a good "RISC-V candidate".
In case it's useful, here are some [instructions] for tackling these sorts of
bugs. Maybe take a look?
Thanks! <3

[instructions]: https://crablangc-dev-guide.crablang.org/notification-groups/risc-v.html
"""
label = "O-riscv"

[ping.fuchsia]
message = """\
Hey friends of Fuchsia! This issue could use some guidance on how this should be
resolved/implemented on Fuchsia. Could one of you weigh in?
"""
label = "O-fuchsia"

[ping.macos]
message = """\
Hey MacOS Group! This issue or PR could use some MacOS-specific guidance. Could one
of you weigh in? Thanks <3
"""
label = "O-macos"

[prioritize]
label = "I-prioritize"

[autolabel."I-prioritize"]
trigger_labels = [
    "regression-untriaged",
    "regression-from-stable-to-stable",
    "regression-from-stable-to-beta",
    "regression-from-stable-to-nightly",
    "I-unsound",
]
exclude_labels = [
    "P-*",
    "T-infra",
    "T-release",
    "requires-nightly",
]

[autolabel."T-crablangdoc"]
trigger_files = [
    # Source code
    "src/libcrablangdoc",
    "src/tools/crablangdoc",
    "src/crablangdoc-json-types",

    # Tests
    "tests/crablangdoc",
    "tests/crablangdoc-ui",
    "tests/crablangdoc-gui",
    "tests/crablangdoc-js",
    "tests/crablangdoc-js-std",
    "tests/crablangdoc-json",

    # Internal tooling
    "src/etc/htmldocck.py",
    "src/tools/jsondocck",
    "src/tools/jsondoclint",
    "src/tools/crablangdoc-gui",
    "src/tools/crablangdoc-js",
    "src/tools/crablangdoc-themes",
]
exclude_labels = [
    "T-*",
]

[autolabel."A-crablangdoc-json"]
trigger_files = [
    "src/libcrablangdoc/json/",
    "src/crablangdoc-json-types",
    "tests/crablangdoc-json",
    "src/tools/jsondocck",
    "src/tools/jsondoclint",
]

[autolabel."T-compiler"]
trigger_files = [
    # Source code
    "compiler",

    # Tests
    "tests/ui",
]
exclude_labels = [
    "T-*",
]

[autolabel."T-libs"]
trigger_files = [
    "library/alloc",
    "library/core",
    "library/panic_abort",
    "library/panic_unwind",
    "library/std",
    "library/stdarch",
    "library/term",
    "library/test",
]
exclude_labels = [
    "T-*",
]

[autolabel."T-bootstrap"]
trigger_files = [
    "x.py",
    "x",
    "x.ps1",
    "src/bootstrap",
    "src/tools/crablang-installer",
    "src/tools/x",
    "configure",
    "Cargo.toml",
    "config.example.toml",
    "src/stage0.json",
    "src/tools/compiletest",
    "src/tools/tidy",
]

[autolabel."T-infra"]
trigger_files = [
    "src/ci",
    "src/tools/bump-stage0",
    "src/tools/cargotest",
    "src/tools/tier-check",
]

[autolabel."T-style"]
trigger_files = [
    "src/doc/style-guide",
]

[autolabel."A-translation"]
trigger_files = [
    "compiler/crablangc_error_messages",
    "compiler/crablangc_errors/src/translation.rs",
    "compiler/crablangc_macros/src/diagnostics"
]

[autolabel."A-query-system"]
trigger_files = [
    "compiler/crablangc_query_system",
    "compiler/crablangc_query_impl",
    "compiler/crablangc_macros/src/query.rs"
]

[autolabel."A-testsuite"]
trigger_files = [
    "src/ci",
    "src/tools/compiletest",
    "src/tools/cargotest",
    "src/tools/tidy",
    "src/tools/remote-test-server",
    "src/tools/remote-test-client",
    "src/tools/tier-check"
]

[autolabel."A-meta"]
trigger_files = [
    "triagebot.toml",
    "crablangfmt.toml",
    "LICENSES",
    "README.md",
    "CONTRIBUTING.md",
    ".reuse",
    ".mailmap",
    ".git-blame-ignore-revs",
    ".editorconfig"
]

[autolabel."T-release"]
trigger_files = [
    "RELEASES.md",
    "src/stage0.json",
    "src/version"
]

[autolabel."S-waiting-on-review"]
new_pr = true

[autolabel."WG-trait-system-refactor"]
trigger_files = [
    "compiler/crablangc_trait_selection/src/solve",
    "compiler/crablangc_middle/src/traits/solve.rs"
]

[notify-zulip."I-prioritize"]
zulip_stream = 245100 # #t-compiler/wg-prioritization/alerts
topic = "#{number} {title}"
message_on_add = """\
@*WG-prioritization/alerts* issue #{number} has been requested for prioritization.

# [Procedure](https://forge.crablang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label)
- Priority?
- Regression?
- Notify people/groups?
- Needs `I-nominated`?
"""
message_on_remove = "Issue #{number}'s prioritization request has been removed."
message_on_close = "Issue #{number} has been closed while requested for prioritization."
message_on_reopen = "Issue #{number} has been reopened."

[notify-zulip."T-crablangdoc"]
required_labels = ["I-nominated"]
zulip_stream = 266220 # #crablangdoc
topic = "nominated: #{number}"
message_on_add = """\
@*T-crablangdoc* issue #{number} "{title}" has been nominated for `T-crablangdoc` discussion.
"""
message_on_remove = "Issue #{number}'s nomination request has been removed."

[notify-zulip."I-types-nominated"]
zulip_stream = 326866 # #T-types/nominated
topic = "#{number}: {title}"
message_on_add = """\
@*T-types* issue #{number} "{title}" has been nominated for team discussion.
"""
message_on_remove = "Issue #{number}'s nomination has been removed. Thanks all for participating!"
message_on_close = "Issue #{number} has been closed. Thanks for participating!"
message_on_reopen = "Issue #{number} has been reopened. Pinging @*T-types*."

[notify-zulip."A-edition-2021"]
required_labels = ["C-bug"]
zulip_stream = 268952 # #edition 2021
topic = "Edition Bugs"
message_on_add = """\
Issue #{number} "{title}" has been added.
"""

[github-releases]
format = "crablangc"
project-name = "CrabLang"
changelog-path = "RELEASES.md"
changelog-branch = "master"

[shortcut]


[mentions."compiler/crablangc_apfloat"]
message = """
Changes crablangc_apfloat. crablangc_apfloat is currently in limbo and you almost \
certainly don't want to change it (see #55993).
"""
cc = ["@eddyb"]

[mentions."compiler/crablangc_codegen_cranelift"]
cc = ["@bjorn3"]

[mentions."compiler/crablangc_codegen_gcc"]
cc = ["@antoyo"]

[mentions."compiler/crablangc_const_eval/src/interpret"]
message = "Some changes occurred to the CTFE / Miri engine"
cc = ["@crablang/miri"]

[mentions."compiler/crablangc_infer/src/infer/error_reporting/need_type_info.rs"]
message = "Some changes occurred in need_type_info.rs"
cc = ["@lcnr"]

[mentions."compiler/crablangc_middle/src/mir/interpret"]
message = "Some changes occurred to the CTFE / Miri engine"
cc = ["@crablang/miri"]

[mentions."compiler/crablangc_mir_transform/src/"]
message = "Some changes occurred to MIR optimizations"
cc = ["@crablang/wg-mir-opt"]

[mentions."compiler/crablangc_trait_selection/src/traits/const_evaluatable.rs"]
message = "Some changes occurred in `const_evaluatable.rs`"
cc = ["@BoxyUwU"]

[mentions."compiler/crablangc_middle/src/ty/abstract_const.rs"]
message = "Some changes occured in `abstract_const.rs`"
cc = ["@BoxyUwU"]

[mentions."compiler/crablangc_ty_utils/src/consts.rs"]
message = "Some changes occured in `crablangc_ty_utils::consts.rs`"
cc = ["@BoxyUwU"]

[mentions."compiler/crablangc_trait_selection/src/solve/"]
message = "Some changes occurred to the core trait solver"
cc = ["@crablang/initiative-trait-system-refactor"]

[mentions."compiler/crablangc_trait_selection/src/traits/engine.rs"]
message = """
Some changes occurred in engine.rs, potentially modifying the public API \
of `ObligationCtxt`.
"""
cc = ["@lcnr", "@compiler-errors"]

[mentions."compiler/crablangc_error_codes/src/error_codes.rs"]
message = "Some changes occurred in diagnostic error codes"
cc = ["@GuillaumeGomez"]

[mentions."library"]
message = """
Hey! It looks like you've submitted a new PR for the library teams!

If this PR contains changes to any `crablang/crablang` public library APIs then \
please comment with `@crablangbot label +T-libs-api -T-libs` to tag it \
appropriately. If this PR contains changes to any unstable APIs please edit \
the PR description to add a link to the relevant [API Change \
Proposal](https://std-dev-guide.crablang.org/feature-lifecycle/api-change-proposals.html) \
or [create one](https://github.com/crablang/libs-team/issues/new?assignees=&labels=api-change-proposal%2C+T-libs-api&template=api-change-proposal.md&title=%28My+API+Change+Proposal%29) \
if you haven't already. If you're unsure where your change falls no worries, \
just leave it as is and the reviewer will take a look and make a decision to \
forward on if necessary.

Examples of `T-libs-api` changes:

* Stabilizing library features
* Introducing insta-stable changes such as new implementations of existing \
  stable traits on existing stable types
* Introducing new or changing existing unstable library APIs (excluding \
  permanently unstable features / features without a tracking issue)
* Changing public documentation in ways that create new stability guarantees
* Changing observable runtime behavior of library APIs
"""

[mentions."src/libcrablangdoc/clean/types.rs"]
cc = ["@camelid"]

[mentions."src/libcrablangdoc/html/static"]
message = "Some changes occurred in HTML/CSS/JS."
cc = [
    "@GuillaumeGomez",
    "@Folyd",
    "@jsha",
]

[mentions."src/libcrablangdoc/html/static/css/themes"]
message = "Some changes occurred in HTML/CSS themes."
cc = ["@GuillaumeGomez"]

[mentions."src/libcrablangdoc/html/static/css/themes/ayu.css"]
message = "A change occurred in the Ayu theme."
cc = ["@Cldfire"]

[mentions."src/crablangdoc-json-types"]
message = """
crablangdoc-json-types is a **public** (although nightly-only) API. \
If possible, consider changing `src/libcrablangdoc/json/conversions.rs`; \
otherwise, make sure you bump the `FORMAT_VERSION` constant.
"""
cc = [
    "@CraftSpider",
    "@aDotInTheVoid",
    "@Enselic",
    "@obi1kenobi",
]

[mentions."src/tools/cargo"]
cc = ["@ehuss"]

[mentions."src/tools/clippy"]
cc = ["@crablang/clippy"]

[mentions."src/tools/miri"]
message = "The Miri subtree was changed"
cc = ["@crablang/miri"]

[mentions."src/tools/crablang-analyzer"]
cc = ["@crablang/crablang-analyzer"]

[mentions."src/tools/crablangfmt"]
cc = ["@crablang/crablangfmt"]

[mentions."compiler/crablangc_middle/src/mir/syntax.rs"]
message = "This PR changes MIR"
cc = ["@oli-obk", "@RalfJung", "@JakobDegen", "@davidtwco", "@celinval", "@vakaras"]

[mentions."compiler/crablangc_error_messages"]
message = "`crablangc_error_messages` was changed"
cc = ["@davidtwco", "@compiler-errors", "@JohnTitor", "@TaKO8Ki"]

[mentions."compiler/crablangc_errors/src/translation.rs"]
message = "`crablangc_errors::translation` was changed"
cc = ["@davidtwco", "@compiler-errors", "@JohnTitor", "@TaKO8Ki"]

[mentions."compiler/crablangc_macros/src/diagnostics"]
message = "`crablangc_macros::diagnostics` was changed"
cc = ["@davidtwco", "@compiler-errors", "@JohnTitor", "@TaKO8Ki"]

[mentions."compiler/crablangc_smir"]
message = "This PR changes Stable MIR"
cc = ["@oli-obk", "@celinval"]

[mentions."compiler/crablangc_target/src/spec"]
message = """
These commits modify **compiler targets**.
(See the [Target Tier Policy](https://doc.crablang.org/nightly/crablangc/target-tier-policy.html).)
"""

[mentions."src/doc/style-guide"]
cc = ["@crablang/style"]

[mentions."Cargo.lock"]
message = """
These commits modify the `Cargo.lock` file. Random changes to `Cargo.lock` can be introduced when switching branches and rebasing PRs.
This was probably unintentional and should be reverted before this PR is merged.

If this was intentional then you can ignore this comment.
"""

[mentions."src/tools/x"]
message = "`src/tools/x` was changed. Bump version of Cargo.toml in `src/tools/x` so tidy will suggest installing the new version."

[mentions."src/bootstrap/defaults/config.compiler.toml"]
message = "This PR changes src/bootstrap/defaults/config.compiler.toml. If appropriate, please also update `config.codegen.toml` so the defaults are in sync."
[mentions."src/bootstrap/defaults/config.codegen.toml"]
message = "This PR changes src/bootstrap/defaults/config.codegen.toml. If appropriate, please also update `config.compiler.toml` so the defaults are in sync."

[assign]
warn_non_default_branch = true
contributing_url = "https://crablangc-dev-guide.crablang.org/getting-started.html"

[assign.adhoc_groups]
compiler-team = [
    "@cjgillot",
    "@petrochenkov",
    "@davidtwco",
    "@oli-obk",
    "@lcnr",
    "@wesleywiser",
]
compiler-team-contributors = [
    "@compiler-errors",
    "@jackh726",
    "@TaKO8Ki",
    "@WaffleLapkin",
    "@b-naber",
]
compiler = [
    "compiler-team",
    "compiler-team-contributors",
]
libs = [
    "@cuviper",
    "@joshtriplett",
    "@Mark-Simulacrum",
    "@m-ou-se",
    "@thomcc",
]
bootstrap = [
    "@Mark-Simulacrum",
    "@albertlarsan68",
    "@ozkanonur",
]
infra-ci = [
    "@Mark-Simulacrum",
    "@pietroalbini",
]
crablangdoc = [
    "@jsha",
    "@GuillaumeGomez",
    "@notriddle",
]
docs = [
    "@ehuss",
    "@GuillaumeGomez",
    "@JohnTitor",
]
query-system = [
    "@cjgillot",
]
incremental = [
    "@michaelwoerister",
    "@wesleywiser",
]
diagnostics = [
    "@compiler-errors",
    "@davidtwco",
    "@oli-obk",
    "@TaKO8Ki",
]
parser = [
    "@compiler-errors",
    "@davidtwco",
    "@nnethercote",
    "@petrochenkov",
]
lexer = [
    "@nnethercote",
    "@petrochenkov",
]
mir = [
    "@davidtwco",
    "@oli-obk",
]
mir-opt = [
    "@oli-obk",
    "@wesleywiser",
]
types = [
    "@compiler-errors",
    "@jackh726",
    "@lcnr",
    "@oli-obk",
    "@spastorino",
]
borrowck = [
    "@davidtwco",
    "@pnkfelix",
]
ast_lowering = [
    "@compiler-errors",
    "@spastorino",
]
fallback = [
    "@Mark-Simulacrum"
]
style-team = [
    "@calebcartwright",
    "@compiler-errors",
    "@joshtriplett",
    "@yaahc",
]

[assign.owners]
"/.github/workflows" =                       ["infra-ci"]
"/Cargo.lock" =                              ["@Mark-Simulacrum"]
"/Cargo.toml" =                              ["@Mark-Simulacrum"]
"/compiler" =                                ["compiler"]
"/compiler/crablangc_apfloat" =                  ["@eddyb"]
"/compiler/crablangc_ast" =                      ["compiler", "parser"]
"/compiler/crablangc_ast_lowering" =             ["compiler", "ast_lowering"]
"/compiler/crablangc_hir_analysis" =             ["compiler", "types"]
"/compiler/crablangc_lexer" =                    ["compiler", "lexer"]
"/compiler/crablangc_llvm" =                     ["@cuviper"]
"/compiler/crablangc_middle/src/mir" =           ["compiler", "mir"]
"/compiler/crablangc_middle/src/traits" =        ["compiler", "types"]
"/compiler/crablangc_const_eval/src/interpret" = ["compiler", "mir"]
"/compiler/crablangc_const_eval/src/transform" = ["compiler", "mir-opt"]
"/compiler/crablangc_mir_build/src/build" =      ["compiler", "mir"]
"/compiler/crablangc_parse" =                    ["compiler", "parser"]
"/compiler/crablangc_parse/src/lexer" =          ["compiler", "lexer"]
"/compiler/crablangc_query_impl" =               ["compiler", "query-system"]
"/compiler/crablangc_query_system" =             ["compiler", "query-system"]
"/compiler/crablangc_trait_selection" =          ["compiler", "types"]
"/compiler/crablangc_traits" =                   ["compiler", "types"]
"/compiler/crablangc_type_ir" =                  ["compiler", "types"]
"/library/alloc" =                           ["libs"]
"/library/core" =                            ["libs", "@scottmcm"]
"/library/panic_abort" =                     ["libs"]
"/library/panic_unwind" =                    ["libs"]
"/library/proc_macro" =                      ["@petrochenkov"]
"/library/std" =                             ["libs"]
"/library/std/src/sys/windows" =             ["@ChrisDenton", "@thomcc"]
"/library/stdarch" =                         ["libs"]
"/library/test" =                            ["libs"]
"/src/bootstrap" =                           ["bootstrap"]
"/src/ci" =                                  ["infra-ci"]
"/src/doc" =                                 ["docs"]
"/src/doc/book" =                            ["@ehuss"]
"/src/doc/edition-guide" =                   ["@ehuss"]
"/src/doc/embedded-book" =                   ["@ehuss"]
"/src/doc/nomicon" =                         ["@ehuss"]
"/src/doc/reference" =                       ["@ehuss"]
"/src/doc/crablang-by-example" =                 ["@ehuss"]
"/src/doc/crablangc-dev-guide" =                 ["@ehuss"]
"/src/doc/crablangdoc" =                         ["crablangdoc"]
"/src/doc/style-guide" =                     ["style-team"]
"/src/etc" =                                 ["@Mark-Simulacrum"]
"/src/libcrablangdoc" =                          ["crablangdoc"]
"/src/llvm-project" =                        ["@cuviper"]
"/src/crablangdoc-json-types" =                  ["crablangdoc"]
"/src/stage0.json" =                         ["bootstrap"]
"/tests/ui" =                                ["compiler"]
"/src/tools/cargo" =                         ["@ehuss", "@joshtriplett"]
"/src/tools/compiletest" =                   ["bootstrap", "@wesleywiser", "@oli-obk", "@compiler-errors"]
"/src/tools/linkchecker" =                   ["@ehuss"]
"/src/tools/crablang-installer" =                ["bootstrap"]
"/src/tools/crablangbook" =                      ["@ehuss"]
"/src/tools/crablangdoc" =                       ["crablangdoc"]
"/src/tools/crablangdoc-js" =                    ["crablangdoc"]
"/src/tools/crablangdoc-themes" =                ["crablangdoc"]
"/src/tools/tidy" =                          ["bootstrap"]
"/src/tools/x" =                             ["bootstrap"]
